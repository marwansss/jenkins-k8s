#Create service account for jenkins
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: jenkins
---

#Create service account for jenkins slaves
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-slaves
  namespace: jenkins
---

#Create non expiration token for jenkins service account to authenticate the application pods
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: jenkins-token-secret
  annotations:
    kubernetes.io/service-account.name: "jenkins"
  namespace: jenkins
---


#Create non expiration token for jenkins salves service account to authenticate the application pods
apiVersion: v1
kind: Secret  
type: kubernetes.io/service-account-token
metadata:
  name: jenkins-slaves-token-secret
  annotations:
    kubernetes.io/service-account.name: "jenkins-slaves"
  namespace: jenkins
---


apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins-permissions
rules:
- apiGroups: [""]
#jenkins master need to create agent pods only
  resources: ["pods", "pods/log", "pods/exec"]
  verbs: ["get", "list", "create", "update", "patch", "delete", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: jenkins-permissions-binding
subjects:
- kind: ServiceAccount
  name: jenkins
  apiGroup: ""
  namespace: jenkins
roleRef:
  kind: ClusterRole
  name: jenkins-permissions
  apiGroup: rbac.authorization.k8s.io


---


apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins-slaves-permissions
rules:
- apiGroups: ["apps"]
#include resources like [Deployments, DaemonSets, StatefulSets, ReplicaSets, ControllerRevisions]:
  resources: ["*"]
  verbs: ["create", "update", "patch", "watch", "get", "list"]

- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/exec"]
  verbs: ["get", "list", "create", "update", "patch", "delete", "watch"]

- apiGroups: [""]
  resources: ["services", "secrets", "configmaps", "persistentvolumeclaims", "persistentvolumes"]
  verbs: ["create", "update", "patch", "watch", "get", "list"]

- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["create", "update", "patch", "watch", "get", "list"]
---

apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: jenkins-slaves-permissions-binding
subjects:
- kind: ServiceAccount
  name: jenkins-slaves
  apiGroup: ""
  namespace: jenkins
roleRef:
  kind: ClusterRole
  name: jenkins-slaves-permissions
  apiGroup: rbac.authorization.k8s.io
